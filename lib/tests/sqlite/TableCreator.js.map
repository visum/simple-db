{"version":3,"sources":["../../../src/tests/sqlite/TableCreator.js"],"names":["testSchema","primaryKeys","unique","foreignKeys","exports","database","sqlite3","Database","tableCreator","TableCreator","schema","createTableIfNotExistsAsync","dropTableIfExistsAsync"],"mappings":";;AAAA;;AACA;;AACA;;;;;;AAEA,MAAMA,UAAU,GAAG;AACf,UAAQ,OADO;AAEf,WAAS,OAFM;AAGf,iBAAe,yBAHA;AAIf,aAAW,OAJI;AAKf,aAAW,CACP;AACI,YAAQ,SADZ;AAEI,YAAQ,IAFZ;AAGI,aAAS;AAHb,GADO,EAMP;AACI,YAAQ,MADZ;AAEI,YAAQ,MAFZ;AAGI,aAAS,MAHb;AAII,mBAAe;AAJnB,GANO,EAYP;AACI,YAAQ,MADZ;AAEI,YAAQ,MAFZ;AAGI,aAAS,OAHb;AAII,kBAAc;AAJlB,GAZO,EAkBP;AACI,YAAQ,SADZ;AAEI,YAAQ,WAFZ;AAGI,aAAS,wBAHb;AAII,kBAAc;AAJlB,GAlBO,EAwBP;AACI,YAAQ,SADZ;AAEI,YAAQ,UAFZ;AAGI,aAAS,uBAHb;AAII,kBAAc;AAJlB,GAxBO,CALI;AAoCfC,EAAAA,WAAW,EAAE,CAAC,IAAD,CApCE;AAqCfC,EAAAA,MAAM,EAAE,EArCO;AAsCfC,EAAAA,WAAW,EAAE;AACT,iBAAa;AACT,eAAS,QADA;AAET,gBAAU;AACN,gBAAQ,aADF;AAEN,mBAAW,OAFL;AAGN,iBAAS,MAHH;AAIN,kBAAU;AAJJ;AAFD,KADJ;AAUT,gBAAY;AACR,eAAS,QADD;AAER,gBAAU;AACN,gBAAQ,aADF;AAEN,mBAAW,OAFL;AAGN,iBAAS,KAHH;AAIN,kBAAU;AAJJ;AAFF;AAVH;AAtCE,CAAnB;;AA4DAC,OAAO,CAAC,4CAAD,CAAP,GAAwD,YAAY;AAChE,QAAMC,QAAQ,GAAG,IAAIC,gBAAQC,QAAZ,CAAqB,UAArB,CAAjB;AACA,QAAMC,YAAY,GAAG,IAAIC,qBAAJ,CAAiB;AAClCC,IAAAA,MAAM,EAAEV,UAD0B;AAElCK,IAAAA;AAFkC,GAAjB,CAArB;AAKA,SAAO,MAAMG,YAAY,CAACG,2BAAb,EAAb;AACH,CARD;;AAUAP,OAAO,CAAC,kDAAD,CAAP,GAA8D,YAAY;AACtE,QAAMC,QAAQ,GAAG,IAAIC,gBAAQC,QAAZ,CAAqB,UAArB,CAAjB;AACA,QAAMC,YAAY,GAAG,IAAIC,qBAAJ,CAAiB;AAClCC,IAAAA,MAAM,EAAEV,UAD0B;AAElCK,IAAAA;AAFkC,GAAjB,CAArB;AAKA,QAAMG,YAAY,CAACG,2BAAb,EAAN;AACA,SAAO,MAAMH,YAAY,CAACG,2BAAb,EAAb;AACH,CATD;;AAWAP,OAAO,CAAC,qDAAD,CAAP,GAAiE,YAAY;AACzE,QAAMC,QAAQ,GAAG,IAAIC,gBAAQC,QAAZ,CAAqB,UAArB,CAAjB;AACA,QAAMC,YAAY,GAAG,IAAIC,qBAAJ,CAAiB;AAClCC,IAAAA,MAAM,EAAEV,UAD0B;AAElCK,IAAAA;AAFkC,GAAjB,CAArB;AAKA,QAAMG,YAAY,CAACG,2BAAb,EAAN;AACA,SAAO,MAAMH,YAAY,CAACI,sBAAb,EAAb;AACH,CATD","sourcesContent":["import * as assert from \"assert\";\nimport TableCreator from \"../../sqlite/TableCreator\"\nimport sqlite3 from \"sqlite3\";\n\nconst testSchema = {\n    \"name\": \"table\",\n    \"label\": \"Table\",\n    \"description\": \"Some great description.\",\n    \"version\": \"1.0.1\",\n    \"columns\": [\n        {\n            \"type\": \"INTEGER\",\n            \"name\": \"id\",\n            \"label\": \"Identifier\"\n        },\n        {\n            \"type\": \"TEXT\",\n            \"name\": \"text\",\n            \"label\": \"Text\",\n            \"description\": \"Some Description.\",\n        },\n        {\n            \"type\": \"REAL\",\n            \"name\": \"real\",\n            \"label\": \"Float\",\n            \"isNullable\": false\n        },\n        {\n            \"type\": \"INTEGER\",\n            \"name\": \"manyToOne\",\n            \"label\": \"Many To One Identifier\",\n            \"isNullable\": false\n        },\n        {\n            \"type\": \"INTEGER\",\n            \"name\": \"oneToOne\",\n            \"label\": \"One to One Identifier\",\n            \"isNullable\": false\n        }\n    ],\n    primaryKeys: [\"id\"],\n    unique: {},\n    foreignKeys: {\n        \"manyToOne\": {\n            \"label\": \"Source\",\n            \"source\": {\n                \"name\": \"other_table\",\n                \"version\": \"1.0.0\",\n                \"label\": \"Many\",\n                \"column\": \"id\"\n            }\n        },\n        \"oneToOne\": {\n            \"label\": \"Source\",\n            \"source\": {\n                \"name\": \"other_table\",\n                \"version\": \"1.0.0\",\n                \"label\": \"One\",\n                \"column\": \"id\"\n            }\n        }\n    }\n};\n\nexports[\"TableCreator: createTableIfNotExistsAsync.\"] = async () => {\n    const database = new sqlite3.Database(\":memory:\");\n    const tableCreator = new TableCreator({\n        schema: testSchema,\n        database\n    });\n\n    return await tableCreator.createTableIfNotExistsAsync();\n}\n\nexports[\"TableCreator: createTableIfNotExistsAsync twice.\"] = async () => {\n    const database = new sqlite3.Database(\":memory:\");\n    const tableCreator = new TableCreator({\n        schema: testSchema,\n        database\n    });\n\n    await tableCreator.createTableIfNotExistsAsync();\n    return await tableCreator.createTableIfNotExistsAsync();\n}\n\nexports[\"TableCreator: createTableIfNotExistsAsync then Drop\"] = async () => {\n    const database = new sqlite3.Database(\":memory:\");\n    const tableCreator = new TableCreator({\n        schema: testSchema,\n        database\n    });\n\n    await tableCreator.createTableIfNotExistsAsync();\n    return await tableCreator.dropTableIfExistsAsync();\n}"],"file":"TableCreator.js"}