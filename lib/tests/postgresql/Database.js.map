{"version":3,"sources":["../../../src/tests/postgresql/Database.js"],"names":["pool","Pool","host","user","password","database","port","exports","Database","addSchema","personSchema","addressSchema","phoneNumberSchema","createTablesFromSchemasAsync","getTable","name","version","addAsync","firstName","lastName"],"mappings":";;AAAA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;;;AAJA;AAMA,MAAMA,IAAI,GAAG,IAAIC,QAAJ,CAAS;AAClBC,EAAAA,IAAI,EAAE,WADY;AAElBC,EAAAA,IAAI,EAAE,WAFY;AAGlBC,EAAAA,QAAQ,EAAE,gBAHQ;AAIlBC,EAAAA,QAAQ,EAAE,OAJQ;AAKlBC,EAAAA,IAAI,EAAE;AALY,CAAT,CAAb;;AAQAC,OAAO,CAAC,2BAAD,CAAP,GAAuC,YAAY;AAC/C,QAAMF,QAAQ,GAAG,IAAIG,iBAAJ,CAAa;AAAEH,IAAAA,QAAQ,EAAEL;AAAZ,GAAb,CAAjB;AAEAK,EAAAA,QAAQ,CAACI,SAAT,CAAmBC,eAAnB;AACAL,EAAAA,QAAQ,CAACI,SAAT,CAAmBE,gBAAnB;AACAN,EAAAA,QAAQ,CAACI,SAAT,CAAmBG,oBAAnB;AAEH,CAPD;;AASAL,OAAO,CAAC,uBAAD,CAAP,GAAmC,YAAY;AAC3C,QAAMF,QAAQ,GAAG,IAAIG,iBAAJ,CAAa;AAAEH,IAAAA,QAAQ,EAAEL;AAAZ,GAAb,CAAjB;AAEAK,EAAAA,QAAQ,CAACI,SAAT,CAAmBC,eAAnB;AAEA,QAAML,QAAQ,CAACQ,4BAAT,EAAN;AAEA,SAAO,MAAMR,QAAQ,CAACS,QAAT,CAAkB;AAC3BC,IAAAA,IAAI,EAAEL,gBAAaK,IADQ;AAE3BC,IAAAA,OAAO,EAAEN,gBAAaM;AAFK,GAAlB,EAGVC,QAHU,CAGD;AACRC,IAAAA,SAAS,EAAE,MADH;AAERC,IAAAA,QAAQ,EAAE;AAFF,GAHC,CAAb;AAQH,CAfD","sourcesContent":["import * as assert from \"assert\";\nimport Database from \"../../postgresql/Database\";\n//import PgMock from \"./PgMock\";\nimport {Pool} from \"pg\";\nimport personSchema from \"./testSchemas/person\";\nimport addressSchema from \"./testSchemas/address\";\nimport phoneNumberSchema from \"./testSchemas/phoneNumber\";\n\nconst pool = new Pool({\n    host: \"localhost\",\n    user: \"test_user\",\n    password: \"test_user_pass\",\n    database: \"tests\",\n    port: 5432\n  });\n\nexports[\"PG Database: Add Schemas.\"] = async () => {\n    const database = new Database({ database: pool });\n\n    database.addSchema(personSchema);\n    database.addSchema(addressSchema);\n    database.addSchema(phoneNumberSchema);\n\n};\n\nexports[\"Database: Add Person.\"] = async () => {\n    const database = new Database({ database: pool });\n\n    database.addSchema(personSchema);\n\n    await database.createTablesFromSchemasAsync();\n\n    return await database.getTable({\n        name: personSchema.name,\n        version: personSchema.version\n    }).addAsync({\n        firstName: \"John\",\n        lastName: \"Doe\"\n    });\n\n};\n\n"],"file":"Database.js"}