{"version":3,"sources":["../../../src/postgresql/utils/invokeMethodAsync.js"],"names":["obj","methodName","args","fallbackResult","Array","isArray","result","apply","error","Promise","reject","resolve"],"mappings":";;;;;;;eAAe,CAACA,GAAD,EAAMC,UAAN,EAAkBC,IAAlB,EAAwBC,cAAxB,KAA2C;AACtD,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcH,IAAd,CAAL,EAA0B;AACtBA,IAAAA,IAAI,GAAG,EAAP;AACH;;AAED,MAAIF,GAAG,IAAI,IAAP,IAAe,OAAOA,GAAG,CAACC,UAAD,CAAV,KAA2B,UAA9C,EAA0D;AACtD,QAAIK,MAAJ;;AAEA,QAAI;AACAA,MAAAA,MAAM,GAAGN,GAAG,CAACC,UAAD,CAAH,CAAgBM,KAAhB,CAAsBP,GAAtB,EAA2BE,IAA3B,CAAT;AACH,KAFD,CAEE,OAAOM,KAAP,EAAc;AACZ,aAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH;;AAED,QAAI,EAAEF,MAAM,YAAYG,OAApB,CAAJ,EAAkC;AAC9B,aAAOA,OAAO,CAACE,OAAR,CAAgBL,MAAhB,CAAP;AACH;;AAED,WAAOA,MAAP;AACH;;AACD,SAAOG,OAAO,CAACE,OAAR,CAAgBR,cAAhB,CAAP;AACH,C","sourcesContent":["export default (obj, methodName, args, fallbackResult) => {\n    if (!Array.isArray(args)) {\n        args = [];\n    }\n\n    if (obj != null && typeof obj[methodName] === \"function\") {\n        let result;\n\n        try {\n            result = obj[methodName].apply(obj, args);\n        } catch (error) {\n            return Promise.reject(error);\n        }\n\n        if (!(result instanceof Promise)) {\n            return Promise.resolve(result);\n        }\n\n        return result;\n    }\n    return Promise.resolve(fallbackResult);\n};"],"file":"invokeMethodAsync.js"}