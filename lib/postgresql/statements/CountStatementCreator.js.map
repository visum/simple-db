{"version":3,"sources":["../../../src/postgresql/statements/CountStatementCreator.js"],"names":["CountStatementCreator","constructor","queryable","Error","createStatement","countStatementCreator","getTableName","PgSQLUtils","escapeName","query","type","removeNullOrEmptyStrings","expression","filter","part","length","createWhereSql","visitor","SqlVisitor","createWhereExpression","createSelectSql","selectSql","whereSql","push","cleanedExpression","sql","join","values"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEe,MAAMA,qBAAN,CAA4B;AACvCC,EAAAA,WAAW,CAACC,SAAD,EAAY;AAEnB,QAAIA,SAAS,IAAI,IAAjB,EAAuB;AACnB,YAAM,IAAIC,KAAJ,CAAU,4DAAV,CAAN;AACH;;AAED,SAAKD,SAAL,GAAiBA,SAAjB;AACH;;AAED,SAAOE,eAAP,CAAuBF,SAAvB,EAAiC;AAC7B,UAAMG,qBAAqB,GAAG,IAAIL,qBAAJ,CAA0BE,SAA1B,CAA9B;AACA,WAAOG,qBAAqB,CAACD,eAAtB,EAAP;AACH;;AAEDE,EAAAA,YAAY,GAAE;AACV,WAAOC,yBAAWC,UAAX,CAAsB,KAAKN,SAAL,CAAeO,KAAf,CAAqBC,IAA3C,CAAP;AACH;;AAEDC,EAAAA,wBAAwB,CAACC,UAAD,EAAa;AACjC,WAAOA,UAAU,CAACC,MAAX,CAAmBC,IAAD,IAAU;AAC/B,aAAO,OAAOA,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,CAACC,MAAL,GAAc,CAAjD;AACH,KAFM,CAAP;AAGH;;AAEDC,EAAAA,cAAc,GAAG;AACb,UAAMC,OAAO,GAAG,IAAIC,mBAAJ,EAAhB;AACA,WAAOD,OAAO,CAACE,qBAAR,CAA8B,KAAKjB,SAAL,CAAeO,KAAf,CAAqBG,UAAnD,CAAP;AACH;;AAEDQ,EAAAA,eAAe,GAAG;AACd,WAAQ,wBAAuB,KAAKd,YAAL,EAAoB,EAAnD;AACH;;AAEDF,EAAAA,eAAe,GAAG;AACd,UAAMiB,SAAS,GAAG,KAAKD,eAAL,EAAlB;AACA,UAAME,QAAQ,GAAG,KAAKN,cAAL,EAAjB;AACA,UAAMJ,UAAU,GAAG,EAAnB;AAEAA,IAAAA,UAAU,CAACW,IAAX,CAAgBF,SAAhB;;AAEA,QAAIC,QAAQ,IAAI,EAAhB,EAAoB;AAChBV,MAAAA,UAAU,CAACW,IAAX,CAAgBD,QAAhB;AACH;;AAED,UAAME,iBAAiB,GAAG,KAAKb,wBAAL,CAA8BC,UAA9B,CAA1B;AAEA,WAAO;AACHa,MAAAA,GAAG,EAAED,iBAAiB,CAACE,IAAlB,CAAuB,GAAvB,CADF;AAEHC,MAAAA,MAAM,EAAE;AAFL,KAAP;AAIH;;AAnDsC","sourcesContent":["import SqlVisitor from \"../visitors/SqlVisitor\";\nimport PgSQLUtils from \"../utils/PostgreSQLUtils\";\n\nexport default class CountStatementCreator {\n    constructor(queryable) {\n\n        if (queryable == null) {\n            throw new Error(\"Null Exception: A queryable is needed to create statement.\");\n        }\n\n        this.queryable = queryable;\n    }\n\n    static createStatement(queryable){\n        const countStatementCreator = new CountStatementCreator(queryable);\n        return countStatementCreator.createStatement();\n    }\n\n    getTableName(){\n        return PgSQLUtils.escapeName(this.queryable.query.type);\n    }\n\n    removeNullOrEmptyStrings(expression) {\n        return expression.filter((part) => {\n            return typeof part === \"string\" && part.length > 0;\n        });\n    }\n\n    createWhereSql() {\n        const visitor = new SqlVisitor();\n        return visitor.createWhereExpression(this.queryable.query.expression);\n    }\n\n    createSelectSql() {\n        return `SELECT count(*) FROM ${this.getTableName()}`;\n    }\n\n    createStatement() {\n        const selectSql = this.createSelectSql();\n        const whereSql = this.createWhereSql();\n        const expression = []\n\n        expression.push(selectSql);\n\n        if (whereSql != \"\") {\n            expression.push(whereSql);\n        }\n\n        const cleanedExpression = this.removeNullOrEmptyStrings(expression);\n\n        return {\n            sql: cleanedExpression.join(\" \"),\n            values: []\n        }\n    }\n\n}"],"file":"CountStatementCreator.js"}