{"version":3,"sources":["../../../src/postgresql/statements/UpdateStatementCreator.js"],"names":["UpdateStatementCreator","AbstractStatementCreator","createStatement","options","updateStatementCreator","entity","keys","Object","validateEntityPrimaryKeys","Error","tokens","reduce","accumulator","key","index","primaryKeys","includes","placeHolderValues","push","PgSQLUtils","escapeName","values","whereStatement","createWhereExpression","sql","tableName","join"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEe,MAAMA,sBAAN,SAAqCC,iCAArC,CAA8D;AAEzE,SAAOC,eAAP,CAAuBC,OAAvB,EAA+B;AAC3B,UAAMC,sBAAsB,GAAG,IAAIJ,sBAAJ,CAA2BG,OAA3B,CAA/B;AACA,WAAOC,sBAAsB,CAACF,eAAvB,EAAP;AACH;;AAEDA,EAAAA,eAAe,GAAG;AACd,UAAMG,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYD,MAAZ,CAAb;;AAEA,QAAI,CAAC,KAAKG,yBAAL,EAAL,EAAuC;AACnC,YAAM,IAAIC,KAAJ,CAAU,+CAAV,CAAN;AACH;;AAED,UAAMC,MAAM,GAAGJ,IAAI,CAACK,MAAL,CAAY,CAACC,WAAD,EAAcC,GAAd,EAAmBC,KAAnB,KAA6B;AACpD,UAAI,KAAKC,WAAL,CAAiBC,QAAjB,CAA0BH,GAA1B,CAAJ,EAAoC;AAChC,eAAOD,WAAP;AACH;;AAEDA,MAAAA,WAAW,CAACK,iBAAZ,CAA8BC,IAA9B,CAAoC,GAAEC,yBAAWC,UAAX,CAAsBP,GAAtB,CAA2B,OAAMC,KAAM,EAA7E;AACAF,MAAAA,WAAW,CAACS,MAAZ,CAAmBH,IAAnB,CAAwBb,MAAM,CAACQ,GAAD,CAA9B;AACA,aAAOD,WAAP;AACH,KARc,EAQZ;AAAEK,MAAAA,iBAAiB,EAAE,EAArB;AAAyBI,MAAAA,MAAM,EAAE;AAAjC,KARY,CAAf;AAUA,UAAMC,cAAc,GAAG,KAAKC,qBAAL,EAAvB;AAEA,WAAO;AACHC,MAAAA,GAAG,EAAG,UAASL,yBAAWC,UAAX,CAAsB,KAAKK,SAA3B,CAAsC,QAAOf,MAAM,CAACO,iBAAP,CAAyBS,IAAzB,CAA8B,IAA9B,CAAoC,IAAGJ,cAAe,EAD/G;AAEHD,MAAAA,MAAM,EAAEX,MAAM,CAACW;AAFZ,KAAP;AAIH;;AA/BwE","sourcesContent":["import PgSQLUtils from \"../utils/PostgreSQLUtils\";\nimport AbstractStatementCreator from \"./AbstractStatementCreator\";\n\nexport default class UpdateStatementCreator extends AbstractStatementCreator {\n\n    static createStatement(options){\n        const updateStatementCreator = new UpdateStatementCreator(options);\n        return updateStatementCreator.createStatement(); \n    }\n\n    createStatement() {\n        const entity = this.entity;\n        const keys = Object.keys(entity);\n\n        if (!this.validateEntityPrimaryKeys()) {\n            throw new Error(\"Cannot update entity: Invalid primary key(s).\");\n        }\n\n        const tokens = keys.reduce((accumulator, key, index) => {\n            if (this.primaryKeys.includes(key)) {\n                return accumulator;\n            }\n\n            accumulator.placeHolderValues.push(`${PgSQLUtils.escapeName(key)} = $${index}`);\n            accumulator.values.push(entity[key]);\n            return accumulator;\n        }, { placeHolderValues: [], values: [] });\n\n        const whereStatement = this.createWhereExpression();\n\n        return {\n            sql: `UPDATE ${PgSQLUtils.escapeName(this.tableName)} SET ${tokens.placeHolderValues.join(\", \")} ${whereStatement}`,\n            values: tokens.values\n        }\n    }\n}"],"file":"UpdateStatementCreator.js"}